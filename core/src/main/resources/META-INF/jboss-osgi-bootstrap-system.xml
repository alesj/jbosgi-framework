<deployment xmlns="urn:jboss:bean-deployer:2.0">
  
  <!-- 
  ********************************
  *                              *  
  *  OSGi Framework              *
  *                              *
  ********************************
  -->
  
  <bean name="OSGiBundleManager" class="org.jboss.osgi.framework.bundle.OSGiBundleManager">
    <constructor>
      <parameter><inject bean="jboss.kernel:service=Kernel" /></parameter>
      <parameter><inject bean="OSGiFrameworkProperties" /></parameter>
      <parameter><inject bean="MainDeployer" /></parameter>
    </constructor>
    <property name="classLoaderDomain"><inject bean="OSGiClassLoaderSystem" property="defaultDomain"/></property>
    <incallback method="addPlugin" state="Instantiated"/>
    <uncallback method="removePlugin" />
  </bean>
  
  <!--
  ********************************
  *                              *
  *  OSGi Metadata Repository    *
  *                              *
  ********************************
  -->

  <bean name="MDRService" class="org.jboss.osgi.framework.bundle.MetaDataRetrievalService">
    <constructor>
      <parameter><inject bean="jboss.kernel:service=Kernel" /></parameter>
      <parameter><inject bean="OSGiBundleManager" property="systemBundle" /></parameter>
    </constructor>
    <property name="factory"><inject bean="InstanceMDRFactory" /></property>
  </bean>
  <bean name="InstanceMDRFactory" class="org.jboss.osgi.framework.bundle.InstanceMetaDataRetrievalFactory">
    <constructor><parameter><inject bean="jboss.kernel:service=Kernel" /></parameter></constructor>
    <incallback method="addFactory" />
    <uncallback method="removeFactory" />
  </bean>
  <bean name="OSGiDictionaryFactory" class="org.jboss.osgi.framework.bundle.OSGiServiceStateDictionaryFactory" />
  <bean name="KernelDictionaryFactory" class="org.jboss.osgi.framework.bundle.KernelDictionaryFactory">
    <constructor><parameter><inject bean="jboss.kernel:service=KernelConfigurator" /></parameter>
    </constructor>
  </bean>
    
  <!-- 
  ********************************
  *                              *  
  *  OSGi Framework Plugins      *
  *                              *
  ********************************
  -->
  
  <bean name="OSGiSystemPackages" class="org.jboss.osgi.framework.plugins.internal.SystemPackagesPluginImpl">
    <constructor><parameter><inject bean="OSGiBundleManager" state="Instantiated"/></parameter></constructor>
  </bean>
  <bean name="OSGiFrameworkEventsPlugin" class="org.jboss.osgi.framework.plugins.internal.FrameworkEventsPluginImpl">
    <constructor><parameter><inject bean="OSGiBundleManager" /></parameter></constructor>
  </bean>
  <bean name="OSGiStoragePlugin" class="org.jboss.osgi.framework.plugins.internal.BundleStoragePluginImpl">
    <constructor><parameter><inject bean="OSGiBundleManager" /></parameter></constructor>
  </bean>
  <bean name="OSGiControllerContextPlugin" class="org.jboss.osgi.framework.bundle.ControllerContextPluginImpl">
    <constructor>
      <parameter><inject bean="OSGiBundleManager" /></parameter>
      <parameter><inject bean="OSGiDeploymentRegistry" /></parameter>
    </constructor>
  </bean>
  <bean name="OSGiServiceManagerPlugin" class="org.jboss.osgi.framework.bundle.ServiceManagerPluginImpl">
    <constructor>
      <parameter><inject bean="OSGiBundleManager" /></parameter>
      <parameter><inject bean="OSGiDeploymentRegistry" /></parameter>
    </constructor>
  </bean>
  
  <!-- 
  ********************************
  *                              *  
  *  OSGi Service Plugins        *
  *                              *
  ********************************
  -->
  
  <bean name="StartLevelService" class="org.jboss.osgi.framework.service.internal.StartLevelImpl">
    <related-class name="org.osgi.service.startlevel.StartLevel">OSGi</related-class>
    <constructor><parameter><inject bean="OSGiBundleManager" /></parameter></constructor>
    <demand state="PreInstall">MDRService</demand>
  </bean>
  <bean name="PackageAdminService" class="org.jboss.osgi.framework.packageadmin.PackageAdminImpl">
    <related-class name="org.osgi.service.packageadmin.PackageAdmin">OSGi</related-class>
    <constructor><parameter><inject bean="OSGiBundleManager" /></parameter></constructor>
    <demand state="PreInstall">MDRService</demand>
  </bean>
  <bean name="DeployerService" class="org.jboss.osgi.framework.service.internal.DeployerServiceImpl">
    <related-class name="org.jboss.osgi.deployment.deployer.DeployerService">OSGi</related-class>
    <constructor><parameter><inject bean="OSGiBundleManager" /></parameter></constructor>
    <demand state="PreInstall">MDRService</demand>
  </bean>
  <bean name="LifecycleInterceptorService" class="org.jboss.osgi.framework.service.internal.LifecycleInterceptorServiceImpl">
    <related-class name="org.jboss.osgi.deployment.interceptor.LifecycleInterceptorService">OSGi</related-class>
    <constructor><parameter><inject bean="OSGiBundleManager" /></parameter></constructor>
    <demand state="PreInstall">MDRService</demand>
  </bean>
  
  <!--
  ********************************
  *                              *  
  * OSGi Interceptors            *
  *                              *  
  ********************************
  -->
  
  <bean name="WebXMLVerifier" class="org.jboss.osgi.framework.service.internal.WebXMLVerifierInterceptor">
    <constructor><parameter><inject bean="OSGiBundleManager" /></parameter></constructor>
  </bean>
  
  <!--
  ********************************
  *                              *  
  *  OSGi Deployment             *
  *                              *
  ********************************
  -->
  
  <!-- The deployment registry -->
  <bean name="OSGiDeploymentRegistry" class="org.jboss.deployers.structure.spi.helpers.AbstractDeploymentRegistry"/>

  <!-- OSGI Deployment -->
  <bean name="OSGiBundleActivatorDeployer" class="org.jboss.osgi.framework.deployers.OSGiBundleActivatorDeployer" />
  <bean name="OSGiBundleResolvedDeployer" class="org.jboss.osgi.framework.deployers.OSGiBundleResolvedDeployer"/>
  <bean name="OSGiBundleStateCreateDeployer" class="org.jboss.osgi.framework.deployers.OSGiBundleStateCreateDeployer">
    <constructor><parameter><inject bean="OSGiBundleManager" /></parameter></constructor>
  </bean>
  <bean name="OSGiBundleStateInstallDeployer" class="org.jboss.osgi.framework.deployers.OSGiBundleStateInstallDeployer"/>
  <bean name="OSGiBundleStructure" class="org.jboss.osgi.deployer.BundleStructureDeployer" />
  <bean name="OSGiContextTrackerDeployer" class="org.jboss.osgi.framework.deployers.OSGiContextTrackerDeployer" />
  <bean name="OSGiDeploymentMetaDataDeployer" class="org.jboss.osgi.framework.deployers.OSGiDeploymentMetaDataDeployer" />
  <bean name="OSGiManifestParsingDeployer" class="org.jboss.osgi.framework.deployers.OSGiManifestParsingDeployer" />
  <bean name="OSGiManifestMetaDataDeployer" class="org.jboss.osgi.framework.deployers.OSGiManifestMetaDataDeployer" />
  <bean name="OSGiNativeCodeMetaDataDeployer" class="org.jboss.osgi.framework.deployers.OSGiNativeCodeMetaDataDeployer" />

  <bean name="OSGiSingletonSchemaResolverFactory">
    <constructor factoryClass="org.jboss.xb.binding.sunday.unmarshalling.SingletonSchemaResolverFactory" factoryMethod="getInstance" />
  </bean>
  <bean name="Pojo2OSGiSchema" class="org.jboss.xb.binding.resolver.MutableSchemaResolver">
    <constructor factoryMethod="getSchemaBindingResolver"><factory bean="OSGiSingletonSchemaResolverFactory" /></constructor>
    <install method="mapURIToClass">
      <parameter>urn:jboss:pojo2osgi:1.0</parameter>
      <parameter>org.jboss.osgi.framework.metadata.internal.OSGiPojoMetaData</parameter>
    </install>
    <uninstall method="removeURIToClassMapping">
      <parameter>urn:jboss:pojo2osgi:1.0</parameter>
    </uninstall>
  </bean>
  
  <!--
  ********************************
  *                              *  
  *  OSGi Classloading           *
  *                              *
  ********************************
  -->
  
  <bean name="OSGiClassLoaderSystem" class="org.jboss.osgi.framework.classloading.OSGiClassLoaderSystem">
    <constructor><parameter><inject bean="OSGiSystemPackages" /></parameter></constructor>
  </bean>
  <bean name="OSGiClassLoaderDomain" class="org.jboss.osgi.framework.classloading.OSGiClassLoaderDomain" >
    <property name="parent"><inject bean="OSGiClassLoaderSystem" property="defaultDomain"/></property>
    <property name="classLoaderSystem"><inject bean="OSGiClassLoaderSystem"/></property>
  </bean>
  <bean name="OSGiClassLoaderFactory" class="org.jboss.osgi.framework.classloading.OSGiClassLoaderFactory" >
    <property name="system"><inject bean="OSGiClassLoaderSystem"/></property>
  </bean>
  <bean name="OSGiClassLoadingDeployer" class="org.jboss.osgi.framework.deployers.OSGiBundleClassLoadingDeployer">
    <property name="domain"><inject bean="OSGiClassLoaderDomain"/></property>
    <property name="factory"><inject bean="OSGiClassLoaderFactory"/></property>
  </bean>
  <bean name="OSGiFragmentClassLoadingDeployer" class="org.jboss.osgi.framework.deployers.OSGiFragmentClassLoadingDeployer">
    <property name="domain"><inject bean="OSGiClassLoaderDomain"/></property>
    <property name="factory"><inject bean="OSGiClassLoaderFactory"/></property>
  </bean>
  <bean name="OSGiModuleDeployer" class="org.jboss.osgi.framework.deployers.OSGiModuleDeployer">
    <constructor><parameter><inject bean="OSGiBundleManager" /></parameter></constructor>
    <property name="classLoading"><inject bean="ClassLoading" /></property>
  </bean>
  <bean name="OSGiFragmentAttachmentDeployer" class="org.jboss.osgi.framework.deployers.OSGiFragmentAttachmentDeployer"/>
   
</deployment>
